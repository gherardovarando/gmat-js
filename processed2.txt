Statistical profiling result from isolate-0x3cc77a0-v8.log, (1767 ticks, 39 unaccounted, 0 excluded).

 [Shared libraries]:
   ticks  total  nonlib   name
     25    1.4%          /lib/x86_64-linux-gnu/libc-2.27.so
      2    0.1%          [vdso]

 [JavaScript]:
   ticks  total  nonlib   name
    479   27.1%   27.5%  Builtin: ArrayMap
    190   10.8%   10.9%  Builtin: CallFunction_ReceiverIsAny
    187   10.6%   10.7%  Builtin: ArgumentsAdaptorTrampoline
    149    8.4%    8.6%  LazyCompile: *u.map /home/gherardo/gmat-js/src/scalar.js:5:23
    144    8.1%    8.3%  LazyCompile: *u.map /home/gherardo/gmat-js/src/prod.js:2:16
    138    7.8%    7.9%  LazyCompile: *u.map /home/gherardo/gmat-js/src/vdiff.js:2:19
     54    3.1%    3.1%  Stub: TransitionElementsKindStub
     50    2.8%    2.9%  Builtin: Call_ReceiverIsAny
     39    2.2%    2.2%  LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      9    0.5%    0.5%  Builtin: InterpreterEntryTrampoline
      8    0.5%    0.5%  Builtin: CompileLazy
      6    0.3%    0.3%  LazyCompile: *x.map /home/gherardo/gmat-js/src/normalize.js:3:18
      5    0.3%    0.3%  Builtin: RecordWrite
      4    0.2%    0.2%  LazyCompile: *v.reduce /home/gherardo/gmat-js/src/sum.js:2:24
      3    0.2%    0.2%  LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      3    0.2%    0.2%  Builtin: ArrayReduce
      2    0.1%    0.1%  Builtin: KeyedLoadIC
      1    0.1%    0.1%  Script: ~<anonymous> internal/errors.js:1:11
      1    0.1%    0.1%  Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1    0.1%    0.1%  LazyCompile: ~v.reduce /home/gherardo/gmat-js/src/sum.js:2:24
      1    0.1%    0.1%  LazyCompile: ~u.map /home/gherardo/gmat-js/src/scalar.js:5:23
      1    0.1%    0.1%  LazyCompile: ~normalizeString path.js:57:25
      1    0.1%    0.1%  LazyCompile: ~module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      1    0.1%    0.1%  LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      1    0.1%    0.1%  LazyCompile: ~NativeModule.getCached internal/bootstrap/loaders.js:152:36
      1    0.1%    0.1%  LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    0.1%    0.1%  LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      1    0.1%    0.1%  Builtin: ToObject
      1    0.1%    0.1%  Builtin: ArrayPrototypePush

 [C++]:
   ticks  total  nonlib   name
     49    2.8%    2.8%  node::contextify::ContextifyScript::New(v8::FunctionCallbackInfo<v8::Value> const&)
      6    0.3%    0.3%  v8::internal::SerializerDeserializer::Iterate(v8::internal::Isolate*, v8::internal::RootVisitor*)
      6    0.3%    0.3%  v8::internal::RootScavengeVisitor::VisitRootPointer(v8::internal::Root, char const*, v8::internal::Object**)
      6    0.3%    0.3%  v8::internal::Bitmap::Clear()
      6    0.3%    0.3%  __pthread_cond_signal
      5    0.3%    0.3%  write
      5    0.3%    0.3%  v8::internal::Heap::Scavenge()
      5    0.3%    0.3%  _IO_vfprintf
      4    0.2%    0.2%  __pthread_cond_wait
      4    0.2%    0.2%  __lll_unlock_wake
      4    0.2%    0.2%  __libc_malloc
      3    0.2%    0.2%  v8::internal::Scavenger::Process(v8::internal::OneshotBarrier*)
      2    0.1%    0.1%  v8::internal::StackFrameIterator::Advance()
      2    0.1%    0.1%  v8::internal::StackFrame::ComputeType(v8::internal::StackFrameIteratorBase const*, v8::internal::StackFrame::State*)
      2    0.1%    0.1%  v8::internal::Scavenger::ScavengeObject(v8::internal::HeapObject**, v8::internal::HeapObject*) [clone .constprop.204]
      2    0.1%    0.1%  v8::internal::RootScavengeVisitor::VisitRootPointers(v8::internal::Root, char const*, v8::internal::Object**, v8::internal::Object**)
      2    0.1%    0.1%  v8::internal::ParserBase<v8::internal::Parser>::ParsePrimaryExpression(bool*, bool*)
      2    0.1%    0.1%  v8::internal::Heap::GarbageCollectionPrologue()
      2    0.1%    0.1%  v8::internal::FixStaleLeftTrimmedHandlesVisitor::VisitRootPointers(v8::internal::Root, char const*, v8::internal::Object**, v8::internal::Object**)
      2    0.1%    0.1%  operator new(unsigned long)
      2    0.1%    0.1%  node::GetBinding(v8::FunctionCallbackInfo<v8::Value> const&)
      2    0.1%    0.1%  cfree
      2    0.1%    0.1%  _dl_addr
      2    0.1%    0.1%  __pthread_cond_broadcast
      2    0.1%    0.1%  __lll_lock_wait
      2    0.1%    0.1%  __GI___pthread_mutex_lock
      2    0.1%    0.1%  _IO_file_xsputn
      1    0.1%    0.1%  vsnprintf
      1    0.1%    0.1%  void v8::internal::BodyDescriptorBase::IterateBodyImpl<v8::internal::ObjectVisitor>(v8::internal::HeapObject*, int, int, v8::internal::ObjectVisitor*)
      1    0.1%    0.1%  v8::internal::interpreter::ConstantArrayBuilder::AllocateReservedEntry(v8::internal::Smi*)
      1    0.1%    0.1%  v8::internal::interpreter::Bytecodes::ToString(v8::internal::interpreter::Bytecode, v8::internal::interpreter::OperandScale)
      1    0.1%    0.1%  v8::internal::interpreter::BytecodeGenerator::VisitNaryLogicalAndExpression(v8::internal::NaryOperation*)
      1    0.1%    0.1%  v8::internal::interpreter::BytecodeGenerator::BuildVariableLoad(v8::internal::Variable*, v8::internal::HoleCheckMode, v8::internal::TypeofMode)
      1    0.1%    0.1%  v8::internal::interpreter::BytecodeGenerator::BuildVariableAssignment(v8::internal::Variable*, v8::internal::Token::Value, v8::internal::HoleCheckMode, v8::internal::LookupHoistingMode)
      1    0.1%    0.1%  v8::internal::interpreter::BytecodeArrayBuilder::StoreAccumulatorInRegister(v8::internal::interpreter::Register)
      1    0.1%    0.1%  v8::internal::interpreter::BytecodeArrayBuilder::JumpIfTrue(v8::internal::interpreter::BytecodeArrayBuilder::ToBooleanMode, v8::internal::interpreter::BytecodeLabel*)
      1    0.1%    0.1%  v8::internal::compiler::Scheduler::ScheduleEarly()
      1    0.1%    0.1%  v8::internal::compiler::RepresentationSelector::VisitNode(v8::internal::compiler::Node*, v8::internal::compiler::Truncation, v8::internal::compiler::SimplifiedLowering*)
      1    0.1%    0.1%  v8::internal::compiler::NodeProperties::IsControlEdge(v8::internal::compiler::Edge)
      1    0.1%    0.1%  v8::internal::compiler::NodeCache<long, v8::base::hash<long>, std::equal_to<long> >::Find(v8::internal::Zone*, long)
      1    0.1%    0.1%  v8::internal::compiler::LoadElimination::AbstractState::Merge(v8::internal::compiler::LoadElimination::AbstractState const*, v8::internal::Zone*)
      1    0.1%    0.1%  v8::internal::compiler::LiveRange::FirstIntersection(v8::internal::compiler::LiveRange*) const
      1    0.1%    0.1%  v8::internal::compiler::LinearScanAllocator::AddToUnhandledSorted(v8::internal::compiler::LiveRange*)
      1    0.1%    0.1%  v8::internal::compiler::JSTypedLowering::ReduceSpeculativeNumberAdd(v8::internal::compiler::Node*)
      1    0.1%    0.1%  v8::internal::compiler::InstructionSelector::VisitWord64Shl(v8::internal::compiler::Node*)
      1    0.1%    0.1%  v8::internal::compiler::GraphReducer::Replace(v8::internal::compiler::Node*, v8::internal::compiler::Node*, unsigned int)
      1    0.1%    0.1%  v8::internal::compiler::GraphReducer::ReduceTop()
      1    0.1%    0.1%  v8::internal::compiler::Graph::NewNode(v8::internal::compiler::Operator const*, int, v8::internal::compiler::Node* const*, bool)
      1    0.1%    0.1%  v8::internal::compiler::EffectControlLinearizer::ProcessNode(v8::internal::compiler::Node*, v8::internal::compiler::Node**, v8::internal::compiler::Node**, v8::internal::compiler::Node**)
      1    0.1%    0.1%  v8::internal::compiler::CommonOperatorReducer::ReduceBranch(v8::internal::compiler::Node*)
      1    0.1%    0.1%  v8::internal::compiler::BytecodeGraphBuilder::MakeNode(v8::internal::compiler::Operator const*, int, v8::internal::compiler::Node* const*, bool)
      1    0.1%    0.1%  v8::internal::compiler::AccessInfoFactory::ComputePropertyAccessInfos(std::vector<v8::internal::Handle<v8::internal::Map>, std::allocator<v8::internal::Handle<v8::internal::Map> > > const&, v8::internal::Handle<v8::internal::Name>, v8::internal::compiler::AccessMode, v8::internal::ZoneVector<v8::internal::compiler::PropertyAccessInfo>*)
      1    0.1%    0.1%  v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce(v8::internal::compiler::Node*)
      1    0.1%    0.1%  v8::internal::Zone::New(unsigned long)
      1    0.1%    0.1%  v8::internal::TransitionsAccessor::SearchTransition(v8::internal::Name*, v8::internal::PropertyKind, v8::internal::PropertyAttributes)
      1    0.1%    0.1%  v8::internal::TransitionsAccessor::Initialize()
      1    0.1%    0.1%  v8::internal::String::IsOneByteEqualTo(v8::internal::Vector<unsigned char const>)
      1    0.1%    0.1%  v8::internal::SpaceWithLinearArea::InlineAllocationStep(unsigned char*, unsigned char*, unsigned char*, unsigned long)
      1    0.1%    0.1%  v8::internal::SpaceWithLinearArea::ComputeLimit(unsigned char*, unsigned char*, unsigned long)
      1    0.1%    0.1%  v8::internal::SemiSpace::FixPagesFlags(long, long)
      1    0.1%    0.1%  v8::internal::Scavenger::ScavengePage(v8::internal::MemoryChunk*)
      1    0.1%    0.1%  v8::internal::Scanner::ScanIdentifierOrKeywordInner(v8::internal::Scanner::LiteralScope*)
      1    0.1%    0.1%  v8::internal::Scanner::Scan()
      1    0.1%    0.1%  v8::internal::Scanner::Next()
      1    0.1%    0.1%  v8::internal::PreParser::PreParseFunction(v8::internal::AstRawString const*, v8::internal::FunctionKind, v8::internal::FunctionLiteral::FunctionType, v8::internal::DeclarationScope*, bool, bool, int*, v8::internal::ProducedPreParsedScopeData**, int)
      1    0.1%    0.1%  v8::internal::ParserBase<v8::internal::PreParser>::ArrowFormalParametersUnexpectedToken()
      1    0.1%    0.1%  v8::internal::ParserBase<v8::internal::Parser>::ParseReturnStatement(bool*)
      1    0.1%    0.1%  v8::internal::ParserBase<v8::internal::Parser>::ParseBlock(v8::internal::ZoneList<v8::internal::AstRawString const*>*, bool*)
      1    0.1%    0.1%  v8::internal::ParserBase<v8::internal::Parser>::BindingPatternUnexpectedToken()
      1    0.1%    0.1%  v8::internal::Parser::Parser(v8::internal::ParseInfo*)
      1    0.1%    0.1%  v8::internal::PagedSpace::UpdateInlineAllocationLimit(unsigned long)
      1    0.1%    0.1%  v8::internal::PagedSpace::RefillLinearAllocationAreaFromFreeList(unsigned long)
      1    0.1%    0.1%  v8::internal::PagedSpace::PagedSpace(v8::internal::Heap*, v8::internal::AllocationSpace, v8::internal::Executability)
      1    0.1%    0.1%  v8::internal::NewSpace::ResetLinearAllocationArea()
      1    0.1%    0.1%  v8::internal::MemoryChunk::UpdateHighWaterMark(unsigned char*)
      1    0.1%    0.1%  v8::internal::Map::UpdateFieldType(int, v8::internal::Handle<v8::internal::Name>, v8::internal::PropertyConstness, v8::internal::Representation, v8::internal::Handle<v8::internal::Object>)
      1    0.1%    0.1%  v8::internal::Map::GetVisitorId(v8::internal::Map*)
      1    0.1%    0.1%  v8::internal::Logger::ApiObjectAccess(char const*, v8::internal::JSObject*)
      1    0.1%    0.1%  v8::internal::Log::MessageBuilder& v8::internal::Log::MessageBuilder::operator<< <char const*>(char const*)
      1    0.1%    0.1%  v8::internal::LargeObjectSpace::FindPage(unsigned char*)
      1    0.1%    0.1%  v8::internal::KeywordOrIdentifierToken(unsigned char const*, int) [clone .part.0]
      1    0.1%    0.1%  v8::internal::KeyedLoadIC::UpdateLoadElement(v8::internal::Handle<v8::internal::HeapObject>, v8::internal::KeyedAccessLoadMode)
      1    0.1%    0.1%  v8::internal::IncrementalMarking::CanBeActivated()
      1    0.1%    0.1%  v8::internal::HeapObject::IterateBody(v8::internal::InstanceType, int, v8::internal::ObjectVisitor*)
      1    0.1%    0.1%  v8::internal::Heap::OldGenerationCapacity()
      1    0.1%    0.1%  v8::internal::Heap::MergeAllocationSitePretenuringFeedback(std::unordered_map<v8::internal::AllocationSite*, unsigned long, std::hash<v8::internal::AllocationSite*>, std::equal_to<v8::internal::AllocationSite*>, std::allocator<std::pair<v8::internal::AllocationSite* const, unsigned long> > > const&)
      1    0.1%    0.1%  v8::internal::Heap::GarbageCollectionEpilogue()
      1    0.1%    0.1%  v8::internal::Heap::CreateFillerObjectAt(unsigned char*, int, v8::internal::ClearRecordedSlots)
      1    0.1%    0.1%  v8::internal::Heap::AllocateRaw(int, v8::internal::AllocationSpace, v8::internal::AllocationAlignment)
      1    0.1%    0.1%  v8::internal::Heap::AllocateFixedArrayWithFiller(v8::internal::Heap::RootListIndex, int, v8::internal::PretenureFlag, v8::internal::Object*)
      1    0.1%    0.1%  v8::internal::Heap::AllocateCode(v8::internal::CodeDesc const&, v8::internal::Code::Kind, v8::internal::Handle<v8::internal::Object>, int, v8::internal::ByteArray*, v8::internal::CodeDataContainer*, v8::internal::ByteArray*, v8::internal::DeoptimizationData*, v8::internal::Movability, unsigned int, bool, int, int, int)
      1    0.1%    0.1%  v8::internal::HandleScopeImplementer::Iterate(v8::internal::RootVisitor*)
      1    0.1%    0.1%  v8::internal::FreeList::Reset()
      1    0.1%    0.1%  v8::internal::Factory::NewStruct(v8::internal::InstanceType, v8::internal::PretenureFlag)
      1    0.1%    0.1%  v8::internal::EntryFrame::Iterate(v8::internal::RootVisitor*) const
      1    0.1%    0.1%  v8::internal::Deserializer<v8::internal::DefaultDeserializerAllocator>::ReadObject(int, v8::internal::Object**)
      1    0.1%    0.1%  v8::internal::Deserializer<v8::internal::DefaultDeserializerAllocator>::ReadData(v8::internal::Object**, v8::internal::Object**, int, unsigned char*)
      1    0.1%    0.1%  v8::internal::DefaultDeserializerAllocator::Allocate(v8::internal::AllocationSpace, int)
      1    0.1%    0.1%  v8::internal::Compiler::Compile(v8::internal::Handle<v8::internal::JSFunction>, v8::internal::Compiler::ClearExceptionFlag)
      1    0.1%    0.1%  v8::internal::CommitPageSize()
      1    0.1%    0.1%  v8::internal::BoilerplateDescription::backing_store_size() const
      1    0.1%    0.1%  v8::internal::Assembler::call(v8::internal::Label*)
      1    0.1%    0.1%  v8::internal::AllocationObserver::AllocationStep(int, unsigned char*, unsigned long)
      1    0.1%    0.1%  v8::base::Mutex::~Mutex()
      1    0.1%    0.1%  std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
      1    0.1%    0.1%  std::ostream::sentry::~sentry()
      1    0.1%    0.1%  std::ostream::sentry::sentry(std::ostream&)
      1    0.1%    0.1%  std::ostream& std::ostream::_M_insert<long>(long)
      1    0.1%    0.1%  node::cares_wrap::(anonymous namespace)::ChannelWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)
      1    0.1%    0.1%  node::._497::data() const
      1    0.1%    0.1%  fwrite
      1    0.1%    0.1%  _init
      1    0.1%    0.1%  CRYPTO_atomic_add

 [Summary]:
   ticks  total  nonlib   name
   1482   83.9%   85.2%  JavaScript
    219   12.4%   12.6%  C++
    111    6.3%    6.4%  GC
     27    1.5%          Shared libraries
     39    2.2%          Unaccounted

 [C++ entry points]:
   ticks    cpp   total   name
     53   46.9%    3.0%  v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*)
     22   19.5%    1.2%  v8::internal::Runtime_CompileLazy(int, v8::internal::Object**, v8::internal::Isolate*)
      6    5.3%    0.3%  v8::internal::Runtime_CompileOptimized_NotConcurrent(int, v8::internal::Object**, v8::internal::Isolate*)
      6    5.3%    0.3%  v8::internal::Runtime_CompileOptimized_Concurrent(int, v8::internal::Object**, v8::internal::Isolate*)
      6    5.3%    0.3%  v8::internal::Runtime_CompileForOnStackReplacement(int, v8::internal::Object**, v8::internal::Isolate*)
      5    4.4%    0.3%  v8::internal::Runtime_AllocateInNewSpace(int, v8::internal::Object**, v8::internal::Isolate*)
      3    2.7%    0.2%  v8::internal::Runtime_StoreIC_Miss(int, v8::internal::Object**, v8::internal::Isolate*)
      2    1.8%    0.1%  v8::internal::Runtime_NewObject(int, v8::internal::Object**, v8::internal::Isolate*)
      2    1.8%    0.1%  v8::internal::Runtime_LoadIC_Miss(int, v8::internal::Object**, v8::internal::Isolate*)
      2    1.8%    0.1%  v8::internal::Runtime_KeyedStoreIC_Miss(int, v8::internal::Object**, v8::internal::Isolate*)
      2    1.8%    0.1%  v8::internal::Runtime_InterpreterDeserializeLazy(int, v8::internal::Object**, v8::internal::Isolate*)
      1    0.9%    0.1%  v8::internal::Runtime_StackGuard(int, v8::internal::Object**, v8::internal::Isolate*)
      1    0.9%    0.1%  v8::internal::Runtime_KeyedLoadIC_Miss(int, v8::internal::Object**, v8::internal::Isolate*)
      1    0.9%    0.1%  v8::internal::Runtime_CreateObjectLiteral(int, v8::internal::Object**, v8::internal::Isolate*)
      1    0.9%    0.1%  v8::internal::Builtin_JsonParse(int, v8::internal::Object**, v8::internal::Isolate*)

 [Bottom up (heavy) profile]:
  Note: percentage shows a share of a particular caller in the total
  amount of its parent calls.
  Callers occupying less than 1.0% are not shown.

   ticks parent  name
    479   27.1%  Builtin: ArrayMap
    432   90.2%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
    432  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
    432  100.0%        Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
    432  100.0%          LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
    432  100.0%            LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37
     21    4.4%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
     21  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     21  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     21  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     21  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     10    2.1%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
     10  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     10  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     10  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     10  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      7    1.5%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/scalar.js:4:26
      7  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      7  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      7  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      7  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      5    1.0%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      5  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      5  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      5  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      5  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37

    190   10.8%  Builtin: CallFunction_ReceiverIsAny
    170   89.5%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
    170  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
    170  100.0%        Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
    170  100.0%          LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
    170  100.0%            LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37
      7    3.7%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      7  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      7  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      7  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      7  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      5    2.6%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/scalar.js:4:26
      5  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      5  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      5  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      5  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      4    2.1%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/prod.js:1:88
      4  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      4  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      4  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      4  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      2    1.1%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      2  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      2  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37

    187   10.6%  Builtin: ArgumentsAdaptorTrampoline
    143   76.5%    Builtin: ArrayMap
    130   90.9%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
    130  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
    130  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
    130  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      6    4.2%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      6  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      6  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      6  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      2    1.4%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      2    1.4%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/prod.js:1:88
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      2  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%            LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2    1.4%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     33   17.6%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     33  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     33  100.0%        Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     33  100.0%          LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     33  100.0%            LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37
      5    2.7%    Builtin: ArrayReduce
      5  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/sum.js:1:88
      5  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/scalar.js:4:26
      5  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      5  100.0%            LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2    1.1%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      2  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      2  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37

    149    8.4%  LazyCompile: *u.map /home/gherardo/gmat-js/src/scalar.js:5:23
    142   95.3%    Builtin: ArrayMap
    126   88.7%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
    126  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
    126  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
    126  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     10    7.0%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
     10  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     10  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     10  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      5    3.5%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/scalar.js:4:26
      5  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      5  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      5  100.0%            LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      7    4.7%    LazyCompile: *u.map /home/gherardo/gmat-js/src/prod.js:2:16
      7  100.0%      Builtin: ArrayMap
      7  100.0%        LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      7  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      7  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11

    144    8.1%  LazyCompile: *u.map /home/gherardo/gmat-js/src/prod.js:2:16
    144  100.0%    Builtin: ArrayMap
    139   96.5%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
    139  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
    139  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
    139  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      5    3.5%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      5  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      5  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      5  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11

    138    7.8%  LazyCompile: *u.map /home/gherardo/gmat-js/src/vdiff.js:2:19
    128   92.8%    Builtin: ArrayMap
    110   85.9%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
    110  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
    110  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
    110  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     12    9.4%      LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
     12  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     12  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     12  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      6    4.7%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      6  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      6  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      6  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      9    6.5%    LazyCompile: *u.map /home/gherardo/gmat-js/src/prod.js:2:16
      9  100.0%      Builtin: ArrayMap
      9  100.0%        LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      9  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      9  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11

     54    3.1%  Stub: TransitionElementsKindStub
     50   92.6%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     50  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     50  100.0%        Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     50  100.0%          LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     50  100.0%            LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37
      2    3.7%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      2  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      2  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      1    1.9%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      1  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      1  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      1  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      1    1.9%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      1  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      1  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      1  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37

     50    2.8%  Builtin: Call_ReceiverIsAny
     44   88.0%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     44  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     44  100.0%        Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     44  100.0%          LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     44  100.0%            LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37
      2    4.0%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/prod.js:1:88
      2  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      2  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      2  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      2  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1    2.0%    LazyCompile: ~normalizeString path.js:57:25
      1  100.0%      LazyCompile: ~resolve path.js:1075:28
      1  100.0%        LazyCompile: ~realpathSync fs.js:1608:40
      1  100.0%          LazyCompile: ~toRealPath internal/modules/cjs/loader.js:193:20
      1  100.0%            LazyCompile: ~Module._findPath internal/modules/cjs/loader.js:212:28
      1    2.0%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/vdiff.js:1:88
      1  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      1  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      1  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      1    2.0%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/scalar.js:4:26
      1  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      1  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      1  100.0%          LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      1  100.0%            Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1    2.0%    LazyCompile: *module.exports /home/gherardo/gmat-js/src/projection.js:3:26
      1  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
      1  100.0%        LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      1  100.0%          Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37

     49    2.8%  node::contextify::ContextifyScript::New(v8::FunctionCallbackInfo<v8::Value> const&)
     49  100.0%    v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*)
     46   93.9%      LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
     46  100.0%        LazyCompile: ~NativeModule.require internal/bootstrap/loaders.js:111:34
      6   13.0%          Script: ~<anonymous> assert.js:1:11
      6  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      5   10.9%          Script: ~<anonymous> tty.js:1:11
      5  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      4    8.7%          Script: ~<anonymous> stream.js:1:11
      4  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      4    8.7%          Script: ~<anonymous> fs.js:1:11
      4  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      3    6.5%          Script: ~<anonymous> util.js:1:11
      3  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      2    4.3%          Script: ~<anonymous> net.js:1:11
      2  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      2    4.3%          Script: ~<anonymous> internal/async_hooks.js:1:11
      2  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      2    4.3%          Script: ~<anonymous> buffer.js:1:11
      2  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      2    4.3%          LazyCompile: ~startup internal/bootstrap/node.js:19:19
      2  100.0%            Script: ~bootstrapNodeJSCore internal/bootstrap/node.js:16:30
      2    4.3%          LazyCompile: ~setupGlobalVariables internal/bootstrap/node.js:292:32
      2  100.0%            LazyCompile: ~startup internal/bootstrap/node.js:19:19
      2    4.3%          LazyCompile: ~setupGlobalConsole internal/bootstrap/node.js:351:30
      2  100.0%            LazyCompile: ~startup internal/bootstrap/node.js:19:19
      1    2.2%          Script: ~<anonymous> perf_hooks.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> path.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> internal/url.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> internal/process.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> internal/modules/esm/module_map.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> internal/modules/esm/loader.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> internal/modules/esm/default_resolve.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> internal/modules/cjs/loader.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          Script: ~<anonymous> _stream_readable.js:1:11
      1  100.0%            LazyCompile: ~NativeModule.compile internal/bootstrap/loaders.js:196:44
      1    2.2%          LazyCompile: ~setup_performance internal/process.js:27:27
      1  100.0%            LazyCompile: ~startup internal/bootstrap/node.js:19:19
      1    2.2%          LazyCompile: ~setupProcessFatal internal/bootstrap/node.js:418:29
      1  100.0%            LazyCompile: ~startup internal/bootstrap/node.js:19:19
      1    2.2%          LazyCompile: ~setupGlobalTimeouts internal/bootstrap/node.js:341:31
      1  100.0%            LazyCompile: ~startup internal/bootstrap/node.js:19:19
      3    6.1%      LazyCompile: ~Script vm.js:38:14
      3  100.0%        LazyCompile: ~createScript vm.js:245:22
      3  100.0%          LazyCompile: ~runInThisContext vm.js:294:26
      3  100.0%            LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37

     39    2.2%  UNKNOWN

     39    2.2%  LazyCompile: *module.exports /home/gherardo/gmat-js/src/gramschmidt.js:6:26
     39  100.0%    LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
     39  100.0%      Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
     39  100.0%        LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
     39  100.0%          LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37
     39  100.0%            LazyCompile: ~Module.load internal/modules/cjs/loader.js:580:33

     25    1.4%  /lib/x86_64-linux-gnu/libc-2.27.so
      1    4.0%    v8::internal::Runtime_CompileOptimized_NotConcurrent(int, v8::internal::Object**, v8::internal::Isolate*)
      1  100.0%      LazyCompile: ~module.exports /home/gherardo/gmat-js/src/orthogonalizer.js:8:26
      1  100.0%        Script: ~<anonymous> /home/gherardo/gmat-js/test.js:1:11
      1  100.0%          LazyCompile: ~Module._compile internal/modules/cjs/loader.js:639:37
      1  100.0%            LazyCompile: ~Module._extensions..js internal/modules/cjs/loader.js:687:37

